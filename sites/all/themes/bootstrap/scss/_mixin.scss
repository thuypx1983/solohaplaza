/* Mixin style */

/* animation */
@mixin animation($value) {
    -webkit-animation: $value;
    -moz-animation: $value;
    -o-animation: $value;
    animation: $value;
}

/* appearance */
@mixin appearance ($value) {
    -webkit-appearance: $value;
    -moz-appearance: $value;
    appearance: $value;
}

/* border radius */
@mixin border-radius($radius) {
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
    border-radius: $radius;
}

/* box-shadow */
@mixin box-shadow($value) {
    -webkit-box-shadow: $value;
    -moz-box-shadow: $value;
    box-shadow: $value;
}
/* custome font */
@mixin fontcallunaBold() {
   -moz-font-feature-settings: "liga=1, dlig=1";
    -ms-font-feature-settings: "liga" 1, "dlig" 1;
    -o-font-feature-settings: "liga" 1, "dlig" 1;
    -webkit-font-feature-settings: "liga" 1, "dlig" 1;
    font-feature-settings: "liga" 1, "dlig" 1;
}
/* filter */
@mixin filter($filter-string) {
    -webkit-filter: $filter-string;
    -moz-filter: $filter-string;
    -ms-filter: $filter-string;
    -o-filter: $filter-string;
    filter: $filter-string;
}

/* transform */
@mixin transform($transforms) {
    -webkit-transform: $transforms;
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    transform: $transforms;
}

/* transition */
@mixin transition($transition: all 0.3s ease) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

/* placeholder */
@mixin placeholder-color($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }
    &:-moz-placeholder { /* Firefox 18- */
        color: $color;
    }
    &::-moz-placeholder {  /* Firefox 19+ */
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
}

/* opacity */
@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity=$opacity*100);
}


@mixin gradient($color-start,$color-end){
  /* IE10+ */
  background-image: -ms-linear-gradient(top, $color-start 0%, $color-end 100%);

  /* Mozilla Firefox */
  background-image: -moz-linear-gradient(top, $color-start 0%, $color-end 100%);

  /* Opera */
  background-image: -o-linear-gradient(top, $color-start 0%, $color-end 100%);

  /* Webkit (Safari/Chrome 10) */
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, #FFFFFF), color-stop(100, #F0F0F0));

  /* Webkit (Chrome 11+) */
  background-image: -webkit-linear-gradient(top, $color-start 0%, $color-end 100%);

  /* W3C Markup */
  background-image: linear-gradient(to bottom, $color-start 0%, $color-end 100%);
}


/* breakpoint with one condition(min or max) */
$mq-support: true !default;
$mq-fixed-value: 1024px;

@mixin bp($feature, $value) {
    // Set global device param
    $media: only screen;

    // Media queries supported
    @if $mq-support == true {

        @media #{$media} and ($feature: $value) {
            @content;
        }

        // Media queries not supported
    } @else {

        @if $feature == 'min-width' {
            @if $value <= $mq-fixed-value {
                @content;
            }
        } @else if $feature == 'max-width' {
            @if $value >= $mq-fixed-value {
                @content;
            }
        }

    }
}

/* breakpoint with two conditions (min and max) */
@mixin small-bp($min-width, $max-width) {
    // Set global device param
    $media: only screen;
    // Media queries supported
    @if $mq-support == true {
        @media #{$media} and ('min-width': $min-width) and ('max-width': $max-width) {
            @content;
        }
    }
}